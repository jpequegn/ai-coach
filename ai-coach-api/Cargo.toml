[package]
name = "ai-coach-api"
version.workspace = true
edition.workspace = true

[dependencies]
# Workspace dependencies
tokio = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
anyhow = { workspace = true }
thiserror = { workspace = true }
chrono = { workspace = true }
uuid = { workspace = true }
tracing = { workspace = true }
tracing-subscriber = { workspace = true }

# API-specific dependencies
axum = "0.7"
axum-extra = { version = "0.9", features = ["typed-header", "multipart"] }
sqlx = { version = "0.7", default-features = false, features = ["runtime-tokio-rustls", "postgres", "chrono", "uuid", "migrate"] }
jsonwebtoken = "9.0"
bcrypt = "0.15"
tower = "0.5"
tower-http = { version = "0.5", features = ["cors", "trace", "auth", "set-header"] }
rand = "0.8"
lettre = "0.11"
regex = "1.0"
md5 = "0.7"
futures = "0.3"
validator = { version = "0.18", features = ["derive"] }
# File handling and upload dependencies
tempfile = "3.0"
bytes = "1.0"
mime = "0.3"
tokio-util = { version = "0.7", features = ["io"] }
# Background processing and caching
redis = { version = "0.24", features = ["tokio-comp"] }
tokio-cron-scheduler = "0.10"

# HTTP client for wearable API integrations
reqwest = { version = "0.11", features = ["json"] }
urlencoding = "2.1"

# AWS S3 for video storage
aws-config = "1.0"
aws-sdk-s3 = "1.0"

# Machine Learning dependencies
linfa = "0.7"
linfa-linear = "0.7"
linfa-trees = "0.7"
linfa-preprocessing = "0.7"
ndarray = "0.16"
ndarray-stats = "0.6"
statrs = "0.17"

# ONNX Runtime for pose estimation
ort = { version = "2.0.0-rc.10", default-features = false, features = ["download-binaries", "half"] }
image = "0.25"

# Force older version of base64ct to avoid edition2024 requirement
base64ct = "=1.6.0"

[dev-dependencies]
# Testing framework dependencies
tokio-test = "0.4"
mockall = "0.12"
wiremock = "0.6"
proptest = "1.4"
criterion = { version = "0.5", features = ["html_reports"] }

# Database testing
testcontainers = "0.15"
testcontainers-modules = { version = "0.3", features = ["postgres"] }

# HTTP client for API testing
reqwest = { version = "0.11", features = ["json"] }
hyper = { version = "1.0", features = ["full"] }

# Assertion helpers
pretty_assertions = "1.4"
assert_matches = "1.5"

# Mock data generation
fake = { version = "2.9", features = ["derive", "chrono", "uuid"] }
quickcheck = "1.0"
quickcheck_macros = "1.0"

# Test utilities
serial_test = "3.0"
once_cell = "1.19"
